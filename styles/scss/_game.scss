// Game board styles go here

$messageBoxHeight: 5.5rem;

html {
    font-size: 125%;
}

body {
    background: black;
    color: white;
    font-family: 'Courier Prime', monospace;
}

h1,h2,h3,p {
    margin: 0;
}

.container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100%;
    overflow: hidden;
    justify-content: stretch;
    position: relative;
    .row {
        display: flex;
        flex-direction: row;
        flex-grow: 1;
    }
    .level {
        position: absolute;
        top: 0;
        left: 0;
        padding: 5px;
        border-radius:5px;
        z-index:30;
        background: rgba(0,0,0,0.5);
    }
}

.statsHolder {
    display: flex;
    flex-direction: column;
    max-height: calc(100vh - #{$messageBoxHeight});
    width: 25%;
    min-width:14rem;
    padding-left: 0.5rem;
    p, h2, h3 {
        font-size: 1rem;
    }
    .special, h2, h3 {
        text-decoration: underline;
    }
    h2, h3, p {
        margin: 0.5rem 0;
    }
    ul {
        margin: 0;
        padding: 0;
        list-style: none;
        li {
            display: flex;
            flex-wrap: wrap;
            margin-bottom: 0.5rem;
            p {
                margin: 0;
                width: 100%;
            }
            button {
                margin-top: 0.2rem;
                display: block;
                width: 50%;
            }
        }
    }
    .inventory {
        overflow-y: auto;
    }
    .actions {
        margin-top: auto;
        ul li button {
            width: 100%;
        }
    }
    button {
        color: yellow;
        background: black;
        display: block;
        min-height: 1rem;
        text-transform: capitalize;
        padding: 0;
        border: none;
        flex-shink:0;
        text-align: left;

        border-radius: 2px;
        transition: 0.3s;
        &:hover, &:focus {
            color: cyan;
        }
    }
    .good {
        color: rgb(0,255,0);
    }
    .okay {
        color: orange;
    }
    .bad {
        color: red;
    }
}

.messages {
    width: 100%;
    height: $messageBoxHeight;
    overflow: hidden;
    // padding: 0.5rem 0;
    p {
        opacity: 0.4;
        margin: 0.1rem 0;
        &.important {
            font-weight: bold;
        }
        &.good {
            color: yellow;
        }
        &.bad {
            color: red;
        }
    }
    p:nth-child(2) {
        opacity: 0.8;
    }
    p:nth-child(3) {
        opacity: 0.6
    }
    p:first-child {
        opacity: 1;
    }
}

.game {
    margin: 0 auto;
    position: relative;
    overflow: hidden;
    flex-grow: 1;
}

.grid {
    display: grid;
    grid-template-columns: repeat(30, 1rem);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    .tile {
        position: relative;
        padding-bottom: 100%;
        width: 100%;
    }
}

.entity {
    position: absolute;
    top: 0;
    left: 0;
    transform: translate(0,0);
    width: 1rem;
    height: 1rem;
    z-index: 10;
}

.tile, .entity {
    .art {
        position: absolute;
        display: block;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 1rem;
    }
    &.hidden {
        visibility: hidden;
    }
    &.memory {
        filter: grayscale(100%) brightness(0.5);
    }
}

.hamburger {
    display: none;
}

@keyframes pulse {
    0% {
        background: white;
    }
    50% {
        background: rgb(0,255,0);
    }
    100% {
        background: white;
    }
}

$barHeight:3px;
$barColor:white;
$barWidth:21px;
$barSpacing:7px;

@media(max-width:620px) {
    .hamburger {
        display: block;
        position: absolute;
        z-index: 60;
        top: 6px;
        right: 6px;
        background: transparent;
        padding: 5px;
        border: none;
        height: 3*$barHeight + 3*$barSpacing;
        .bars {
            position: relative;
            background: $barColor;
            height: $barHeight;
            width: $barWidth;
            transition: 0.3s;
            transform: rotateZ(0deg);
            &::before, &::after {
                content: '';
                position: absolute;
                background: $barColor;
                height: $barHeight;
                width: $barWidth;
                transition: 0.3s;
                transform: rotateZ(0deg);
            }
            &::before {
                top: -$barSpacing;
                left: 0;
            }
            &::after {
                bottom: -$barSpacing;
                left: 0;
            }
        }
    }
    .hamburger.actionExists {
        .bars, .bars::before, .bars::after {
            animation: pulse 1.5s linear infinite;
        }
    }
    .hamburger.clicked {
        .bars {
            transform: rotateZ(45deg);
            &::before {
                top:0;
                // transform: rotateZ(90deg);
            }
            &::after {
                bottom: 0;
                transform: rotateZ(-90deg);
            }
        }
    }
    .statsHolder {
        position: absolute;
        top: 0;
        z-index: 40;
        background: black;
        padding: 0 0 1rem 1rem;
        bottom: 0;
        width: 100%;
        transform: translateX(100%);
        transition: transform 0.3s;
        max-height:100vh;
        overflow-y: auto;
        &.open {
            transform: translateX(0);
        }
    }
}

@media(max-width:400px) {
    html {
        font-size: 100%;
    }
}

@media(max-height:400px) {
    html {
        font-size: 100%;
    }
}